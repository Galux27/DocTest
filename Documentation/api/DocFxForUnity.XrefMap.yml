### YamlMime:ManagedReference
items:
- uid: DocFxForUnity.XrefMap
  commentId: T:DocFxForUnity.XrefMap
  id: XrefMap
  parent: DocFxForUnity
  children:
  - DocFxForUnity.XrefMap.references
  - DocFxForUnity.XrefMap.sorted
  langs:
  - csharp
  - vb
  name: XrefMap
  nameWithType: XrefMap
  fullName: DocFxForUnity.XrefMap
  type: Class
  source:
    id: XrefMap
    path: C:\UnityProjects\DocumentationGenTest\UnityXrefMaps\XrefMap.cs
    startLine: 5
  assemblies:
  - Generate
  namespace: DocFxForUnity
  summary: "\nRepresents a xref map file of Unity.\n"
  example: []
  syntax:
    content: 'public sealed class XrefMap : object'
    content.vb: >-
      Public NotInheritable Class XrefMap

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: DocFxForUnity.XrefMap.sorted
  commentId: P:DocFxForUnity.XrefMap.sorted
  id: sorted
  parent: DocFxForUnity.XrefMap
  langs:
  - csharp
  - vb
  name: sorted
  nameWithType: XrefMap.sorted
  fullName: DocFxForUnity.XrefMap.sorted
  type: Property
  source:
    id: sorted
    path: C:\UnityProjects\DocumentationGenTest\UnityXrefMaps\XrefMap.cs
    startLine: 7
  assemblies:
  - Generate
  namespace: DocFxForUnity
  syntax:
    content: public bool sorted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property sorted As Boolean
  overload: DocFxForUnity.XrefMap.sorted*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DocFxForUnity.XrefMap.references
  commentId: P:DocFxForUnity.XrefMap.references
  id: references
  parent: DocFxForUnity.XrefMap
  langs:
  - csharp
  - vb
  name: references
  nameWithType: XrefMap.references
  fullName: DocFxForUnity.XrefMap.references
  type: Property
  source:
    id: references
    path: C:\UnityProjects\DocumentationGenTest\UnityXrefMaps\XrefMap.cs
    startLine: 9
  assemblies:
  - Generate
  namespace: DocFxForUnity
  syntax:
    content: public XrefMapReference[] references { get; set; }
    parameters: []
    return:
      type: DocFxForUnity.XrefMapReference[]
    content.vb: Public Property references As XrefMapReference()
  overload: DocFxForUnity.XrefMap.references*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: DocFxForUnity
  commentId: N:DocFxForUnity
  name: DocFxForUnity
  nameWithType: DocFxForUnity
  fullName: DocFxForUnity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DocFxForUnity.XrefMap.sorted*
  commentId: Overload:DocFxForUnity.XrefMap.sorted
  name: sorted
  nameWithType: XrefMap.sorted
  fullName: DocFxForUnity.XrefMap.sorted
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DocFxForUnity.XrefMap.references*
  commentId: Overload:DocFxForUnity.XrefMap.references
  name: references
  nameWithType: XrefMap.references
  fullName: DocFxForUnity.XrefMap.references
- uid: DocFxForUnity.XrefMapReference[]
  isExternal: true
  name: XrefMapReference[]
  nameWithType: XrefMapReference[]
  fullName: DocFxForUnity.XrefMapReference[]
  nameWithType.vb: XrefMapReference()
  fullName.vb: DocFxForUnity.XrefMapReference()
  name.vb: XrefMapReference()
  spec.csharp:
  - uid: DocFxForUnity.XrefMapReference
    name: XrefMapReference
    nameWithType: XrefMapReference
    fullName: DocFxForUnity.XrefMapReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DocFxForUnity.XrefMapReference
    name: XrefMapReference
    nameWithType: XrefMapReference
    fullName: DocFxForUnity.XrefMapReference
  - name: ()
    nameWithType: ()
    fullName: ()
